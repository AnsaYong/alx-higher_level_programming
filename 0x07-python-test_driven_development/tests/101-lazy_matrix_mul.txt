Test the ``100-matrix_mul`` module
==================================

Using ``matrix_mul``
====================

First import the ``matrix_mul`` function from the ``100-matrix_mul`` module.
Then execute the following interatcively:

	>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
	>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
	[[7, 10], [15, 22]]

	>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
	[[13, 16]]

	>>> print(matrix_mul(2, [[3, 4], [5, 6]]))
	Traceback (most recent call last):
		...
	TypeError: m_a must be a list

	>>> print(matrix_mul([1, 2], [[3, 4], [5, 6]]))
	Traceback (most recent call last):
		...
	TypeError: m_a must be a list of lists

	>>> print(matrix_mul([[1, 2]], [[], []]))
	Traceback (most recent call last):
		...
	ValueError: m_b can't be empty

	>>> print(matrix_mul([[1, 2], ["3", 4]], [[1, 2], [3, 4]]))
	Traceback (most recent call last):
		...
	TypeError: m_a should contain only integers or floats

	>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2, 6], [3, 4]]))
	Traceback (most recent call last):
		...
	TypeError: each row of m_b must be of the same size

	>>> print(matrix_mul([[1, 2, 1], [3, 4, 4]], [[1, 2], [3, 4]]))
	Traceback (most recent call last):
		...
	ValueError: m_a and m_b can't be multiplied
