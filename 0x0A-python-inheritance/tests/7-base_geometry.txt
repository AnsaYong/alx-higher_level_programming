The ``7-base_geometry`` module
==============================

Using ``BaseGeometry`` and its methods
--------------------------------------

This script contains test cases for the ``7-base_geometry``
module. First __import__ the ``BaseGeometry`` class and then
run the test cases provided.

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
		...
	Exception: area() is not implemented

	>>> bg.integer_validator()
	Traceback (most recent call last):
		...
	TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("my_int", 12)

	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

	>>> bg.integer_validator("name", a)
	Traceback (most recent call last):
		...
	NameError: name 'a' is not defined

	>>> bg.integer_validator("name", -1)
	Traceback (most recent call last):
		...
	ValueError: name must be greater than 0

	>>> bg.integer_validator("name", 0)
	Traceback (most recent call last):
		...
	ValueError: name must be greater than 0

	>>> bg.integer_validator("age")
	Traceback (most recent call last):
		...
	TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator("age", (4,))
	Traceback (most recent call last):
		...
	TypeError: age must be an integer

	>>> bg.integer_validator("age", [3])
	Traceback (most recent call last):
		...
	TypeError: age must be an integer

	>>> bg.integer_validator("age", True)
	Traceback (most recent call last):
		...
	TypeError: age must be an integer

	>>> bg.integer_validator("age", [3, 4])
	Traceback (most recent call last):
		...
	TypeError: age must be an integer

	>>> bg.integer_validator("age", None)
	Traceback (most recent call last):
		...
	TypeError: age must be an integer
